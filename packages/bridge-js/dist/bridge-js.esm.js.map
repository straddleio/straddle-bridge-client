{"version":3,"file":"bridge-js.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { EBridgeMessageType, TMessage, TMode } from '@straddleio/bridge-core'\nexport type { TMode } from '@straddleio/bridge-core'\ntype TOnLoadErrorParams = { error_code: 'iframe_error'; error: ErrorEvent; message: string } | { error_code: 'init_error'; message: any; origin: string }\ntype TOnSuccessParams = import('@straddleio/bridge-core').TPaykeyResponse\n\nconst IFRAME_ID = 'Straddle-widget-iframe'\nconst BRIDGE_CLIENT_LOG_LABEL_STYLE = 'color: #14b8a6; padding: 0px; border-radius: 24px; font-weight: 600;'\nconst BRIDGE_SERVER_LOG_LABEL_STYLE = 'color: #a855f7; padding: 0px; border-radius: 24px; font-weight: 600;'\n\nconst consoleDictionary: any = {\n    log: { conditionFn: (verbose: boolean) => verbose },\n    error: { conditionFn: (verbose: boolean) => true },\n    warn: { conditionFn: (verbose: boolean) => true },\n    info: { conditionFn: (verbose: boolean) => verbose },\n    debug: { conditionFn: (verbose: boolean) => verbose },\n    table: { conditionFn: (verbose: boolean) => verbose },\n}\nconst log = (...args: any[]) => console.log('%c●%c', BRIDGE_CLIENT_LOG_LABEL_STYLE, '', ...args)\nconst warn = (...args: any[]) => console.warn('%c●%c', BRIDGE_CLIENT_LOG_LABEL_STYLE, '', ...args)\nconst error = (...args: any[]) => console.error('%c●%c', BRIDGE_CLIENT_LOG_LABEL_STYLE, '', ...args)\n\nconst getParentOrigin = () => [\n    typeof window !== 'undefined' && encodeURIComponent(window.location.origin.replace('https://', '').replace('http://', '')),\n    typeof window !== 'undefined' && window.location.protocol.replace(':', ''),\n]\n\nconst appUrlDictionary: Record<TMode, string> = {\n    production: 'https://bridge.straddle.io',\n    sandbox: 'https://bridge-sandbox.straddle.io',\n}\n\nconst getAppURLFromMode = (mode?: TMode) => appUrlDictionary[mode ?? 'production']\n\nexport const straddleBridge = {\n    getUrl: () => {\n        const [parentOrigin, protocol] = getParentOrigin()\n        return `${straddleBridge.origin}/?parentOriginURL=${parentOrigin}&parentOriginProtocol=${protocol}`\n    },\n    origin: '',\n    mounted: false,\n    verbose: false,\n    messageHandler: undefined as undefined | ((event: MessageEvent<TMessage>) => void),\n    iframeErrorHandler: undefined as undefined | ((errorEvent: ErrorEvent) => void),\n    init: function init(params: {\n        mode?: TMode\n        appUrl?: string\n        token: string\n        onSuccess: (payload: TOnSuccessParams) => void\n        onSuccessCTAClicked?: () => void\n        onClose?: () => void\n        onLoadError?: (err: TOnLoadErrorParams) => void\n        allowManualEntry?: boolean\n        onManualEntry?: () => void\n        onRetry?: () => void\n        targetRef?: HTMLElement | undefined\n        style?: Partial<CSSStyleDeclaration>\n        className?: string\n        verbose?: boolean\n    }) {\n        let {\n            mode,\n            appUrl,\n            token,\n            onSuccess,\n            onSuccessCTAClicked,\n            onClose,\n            onLoadError,\n            allowManualEntry = true,\n            onManualEntry,\n            onRetry,\n            targetRef,\n            style,\n            className,\n            verbose = false,\n        } = params\n        appUrl = appUrl ?? getAppURLFromMode(mode)\n        appUrl = appUrl.endsWith('/') ? appUrl.slice(0, -1) : appUrl\n        straddleBridge.origin = appUrl ?? 'https://bridge.straddle.io'\n        straddleBridge.verbose = !!verbose\n        verbose && log('init called')\n        const iframe = document.createElement('iframe')\n        iframe.setAttribute('src', `${straddleBridge.getUrl()}&allowManualEntry=${allowManualEntry}`)\n        straddleBridge.iframeErrorHandler = (errorEvent: ErrorEvent) => {\n            error('Error loading Straddle Widget')\n            onLoadError?.({ error_code: 'iframe_error', error: errorEvent, message: 'Error loading Straddle Widget' })\n        }\n        iframe.addEventListener('error', straddleBridge.iframeErrorHandler)\n        iframe.id = IFRAME_ID\n        let iframe_style = style\n        if (!style) {\n            iframe_style = { position: 'fixed', width: '100%', height: '100%', top: '0%', left: '0', zIndex: '2147483647' }\n        }\n        Object.assign(iframe.style, iframe_style)\n\n        if (className) {\n            className.split(' ').forEach((className) => {\n                iframe.classList.add(className)\n            })\n        }\n        ;(targetRef || document.getElementsByTagName('body')[0]).appendChild(iframe)\n        if (typeof window !== 'undefined') {\n            if (straddleBridge.messageHandler) {\n                window.removeEventListener('message', straddleBridge.messageHandler)\n            }\n            straddleBridge.messageHandler = function (event: MessageEvent<TMessage>) {\n                // Make sure the message is from the expected origin\n                if (event.origin === straddleBridge.origin) {\n                    verbose && event.data.type !== EBridgeMessageType.CONSOLE && log('Message received from Bridge app:', event.data.type, event)\n                    const message = event.data\n                    switch (message?.type) {\n                        case EBridgeMessageType.PING:\n                            break\n                        case EBridgeMessageType.MOUNTED:\n                            straddleBridge.mounted = true\n                            straddleBridge.send({ type: EBridgeMessageType.INITIALIZE, token })\n                            break\n                        case EBridgeMessageType.ON_CLOSE:\n                            onClose?.()\n                            straddleBridge.remove()\n                            break\n                        case EBridgeMessageType.ON_SUCCESS_CTA_CLICKED:\n                            onSuccessCTAClicked?.()\n                            straddleBridge.remove()\n                            break\n                        case EBridgeMessageType.ON_MANUAL_ENTRY:\n                            onManualEntry?.()\n                            break\n                        case EBridgeMessageType.ON_RETRY:\n                            onRetry?.()\n                            break\n                        case EBridgeMessageType.ON_PAYKEY:\n                            onSuccess?.(message.paykeyResponse)\n                            break\n                        case EBridgeMessageType.ERROR:\n                            onLoadError?.({ error_code: 'init_error', ...message.payload, origin: event.origin })\n                            break\n                        case EBridgeMessageType.CONSOLE:\n                            {\n                                const parsedPayload: any = (message as any).payload.map((item: any) => {\n                                    try {\n                                        return JSON.parse(item)\n                                    } catch {\n                                        return item\n                                    }\n                                })\n                                if ('method' in message) {\n                                    const method = (message as any).method as keyof typeof console\n                                    consoleDictionary[method]?.conditionFn(!!verbose) &&\n                                        (console[method] as Function).apply(console, ['%c●%c', BRIDGE_SERVER_LOG_LABEL_STYLE, '', ...parsedPayload])\n                                }\n                            }\n                            break\n                    }\n                }\n            }\n            window.addEventListener('message', straddleBridge.messageHandler)\n        }\n    },\n    getIframe: () => document.getElementById(IFRAME_ID) as HTMLIFrameElement,\n    show: () => {\n        straddleBridge.verbose && console.log('straddleBridge.show method called.')\n        const iframe = straddleBridge.getIframe()\n        straddleBridge.verbose && iframe && console.log('iframe found, setting display to block.')\n        iframe.style.display = 'block'\n    },\n    hide: () => {\n        straddleBridge.verbose && console.log('straddleBridge.hide method called.')\n        const iframe = straddleBridge.getIframe()\n        straddleBridge.verbose && iframe && console.log('iframe found, setting display to none.')\n        iframe.style.display = 'none'\n    },\n    remove: () => {\n        straddleBridge.verbose && console.log('straddleBridge.remove method called.')\n        if (typeof window !== 'undefined' && straddleBridge.messageHandler) {\n            window.removeEventListener('message', straddleBridge.messageHandler)\n            straddleBridge.messageHandler = undefined\n        }\n        const iframe = straddleBridge.getIframe()\n        if (iframe && straddleBridge.iframeErrorHandler) {\n            iframe.removeEventListener('error', straddleBridge.iframeErrorHandler)\n            straddleBridge.iframeErrorHandler = undefined\n        }\n        iframe?.remove()\n        straddleBridge.mounted = false\n    },\n    send: function send(message: TMessage) {\n        const iframe = document.getElementById(IFRAME_ID) as HTMLIFrameElement\n        if (iframe) {\n            straddleBridge.verbose && log('Bridge client: Sending message to iframe with target:', straddleBridge.origin, ', message:', message)\n            iframe.contentWindow?.postMessage(message, straddleBridge.origin)\n        } else {\n            straddleBridge.verbose && log('Bridge client', 'No iframe found, message not sent:', message)\n        }\n    },\n}\ntypeof window !== 'undefined' && ((window as any).straddleBridge = straddleBridge)\n\nObject.defineProperty(straddleBridge, 'debug', {\n    value: {\n        enable: () => straddleBridge.send({ type: EBridgeMessageType.DEBUG, enable: true }),\n        disable: () => straddleBridge.send({ type: EBridgeMessageType.DEBUG, enable: false }),\n    },\n    enumerable: false,\n    writable: false,\n    configurable: false,\n})\n"],"names":["IFRAME_ID","BRIDGE_CLIENT_LOG_LABEL_STYLE","consoleDictionary","log","conditionFn","verbose","error","warn","info","debug","table","args","console","appUrlDictionary","production","sandbox","straddleBridge","getUrl","parentOrigin","protocol","window","encodeURIComponent","location","origin","replace","mounted","messageHandler","undefined","iframeErrorHandler","init","params","mode","appUrl","token","onSuccess","onSuccessCTAClicked","onClose","onLoadError","allowManualEntry","onManualEntry","onRetry","targetRef","style","className","getAppURLFromMode","endsWith","slice","iframe","document","createElement","setAttribute","errorEvent","error_code","message","addEventListener","id","iframe_style","position","width","height","top","left","zIndex","Object","assign","split","forEach","classList","add","getElementsByTagName","appendChild","removeEventListener","event","data","type","EBridgeMessageType","CONSOLE","PING","MOUNTED","send","INITIALIZE","ON_CLOSE","remove","ON_SUCCESS_CTA_CLICKED","ON_MANUAL_ENTRY","ON_RETRY","ON_PAYKEY","paykeyResponse","ERROR","payload","parsedPayload","map","item","JSON","parse","_a","method","apply","getIframe","getElementById","show","display","hide","contentWindow","postMessage","defineProperty","value","enable","DEBUG","disable","enumerable","writable","configurable"],"mappings":"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"}
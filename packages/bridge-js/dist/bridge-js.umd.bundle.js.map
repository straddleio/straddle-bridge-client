{"version":3,"file":"bridge-js.umd.bundle.js","sources":["../../bridge-core/dist/types.js","../src/index.ts"],"sourcesContent":["export var EBridgeMessageType;\n(function (EBridgeMessageType) {\n    EBridgeMessageType[\"PING\"] = \"@straddleio/js-bridge/ping\";\n    EBridgeMessageType[\"ERROR\"] = \"@straddleio/js-bridge/error\";\n    EBridgeMessageType[\"INITIALIZE\"] = \"@straddleio/js-bridge/initialize\";\n    EBridgeMessageType[\"INITIALIZING\"] = \"@straddleio/js-bridge/initializing\";\n    EBridgeMessageType[\"INITIALIZED\"] = \"@straddleio/js-bridge/initialized\";\n    EBridgeMessageType[\"MOUNTED\"] = \"@straddleio/js-bridge/mounted\";\n    EBridgeMessageType[\"ON_PAYKEY\"] = \"@straddleio/js-bridge/on-paykey\";\n    EBridgeMessageType[\"ON_SUCCESS\"] = \"@straddleio/js-bridge/on-success\";\n    EBridgeMessageType[\"ON_SUCCESS_CTA_CLICKED\"] = \"@straddleio/js-bridge/on-success-cta-clicked\";\n    EBridgeMessageType[\"ON_CLOSE\"] = \"@straddleio/js-bridge/on-close\";\n    EBridgeMessageType[\"ON_MANUAL_ENTRY\"] = \"@straddleio/js-bridge/on-manual-entry\";\n    EBridgeMessageType[\"ON_RETRY\"] = \"@straddleio/js-bridge/on-retry\";\n    EBridgeMessageType[\"TOKEN\"] = \"@straddleio/js-bridge/token\";\n    EBridgeMessageType[\"DEBUG\"] = \"@straddleio/js-bridge/debug\";\n    EBridgeMessageType[\"CONSOLE\"] = \"@straddleio/js-bridge/console\";\n})(EBridgeMessageType || (EBridgeMessageType = {}));\n","import { EBridgeMessageType, TMessage, TPaykeyResponse } from '@straddleio/bridge-core'\n\nconst IFRAME_ID = 'Straddle-widget-iframe'\n\nexport const straddleBridge = {\n    getUrl: () => `${straddleBridge.origin}/${encodeURIComponent(typeof window !== 'undefined' && window.location.origin.replace('https://', ''))}`,\n    origin: '',\n    mounted: false,\n    verbose: false,\n    init: function init(params: {\n        appUrl: string\n        token: string\n        onSuccess?: (payload: TPaykeyResponse) => void\n        onSuccessCTAClicked?: () => void\n        onClose?: () => void\n        onLoadError?: (err: ErrorEvent) => void\n        onManualEntry?: () => void\n        onRetry?: () => void\n        targetRef: HTMLElement | undefined\n        style: Partial<CSSStyleDeclaration>\n        className?: string\n        verbose?: boolean\n    }) {\n        const {\n            appUrl,\n            token,\n            onSuccess,\n            onSuccessCTAClicked,\n            onClose,\n            onLoadError,\n            onManualEntry,\n            onRetry,\n            targetRef,\n            style,\n            className,\n            verbose = false,\n        } = params\n        straddleBridge.origin = appUrl ?? 'https://production.straddle.io'\n        verbose && console.log('init called')\n        const iframe = document.createElement('iframe')\n        iframe.setAttribute('src', straddleBridge.getUrl())\n        iframe.addEventListener('error', (errorEvent) => {\n            console.error('Error loading Straddle Widget')\n            onLoadError?.(errorEvent)\n        })\n        iframe.id = IFRAME_ID\n        let iframe_style = style\n        if (!style) {\n            iframe_style = { position: 'fixed', width: '100%', height: '100%', top: '0%', left: '0', zIndex: '2147483647' }\n        }\n        Object.assign(iframe.style, iframe_style)\n\n        if (className) {\n            className.split(' ').forEach((className) => {\n                iframe.classList.add(className)\n            })\n        }\n        ;(targetRef || document.getElementsByTagName('body')[0]).appendChild(iframe)\n        typeof window !== 'undefined' &&\n            window.addEventListener('message', function (event: MessageEvent<TMessage>) {\n                if (event.origin === straddleBridge.origin) {\n                    verbose && console.log('Message received from widget:', event.data.type, event)\n                    const message = event.data\n                    switch (message?.type) {\n                        case EBridgeMessageType.MOUNTED:\n                            straddleBridge.mounted = true\n                            straddleBridge.send({ type: EBridgeMessageType.INITIALIZE, token })\n                            break\n                        case EBridgeMessageType.ON_CLOSE:\n                            onClose?.()\n                            straddleBridge.mounted = false\n                            document.querySelector(`#${IFRAME_ID}`)?.remove()\n                            break\n                        case EBridgeMessageType.ON_SUCCESS_CTA_CLICKED:\n                            document.getElementsByTagName('body')[0].removeChild(iframe)\n                            onSuccessCTAClicked?.()\n                            break\n                        case EBridgeMessageType.ON_MANUAL_ENTRY:\n                            onManualEntry?.()\n                            break\n                        case EBridgeMessageType.ON_RETRY:\n                            onRetry?.()\n                            break\n                        case EBridgeMessageType.ON_PAYKEY:\n                            onSuccess?.(message.paykeyResponse)\n                            // onSuccess?.(message as any)\n                            break\n                        case EBridgeMessageType.CONSOLE:\n                            {\n                                const parsedPayload: any = message.payload.map((item: any) => {\n                                    try {\n                                        return JSON.parse(item)\n                                    } catch {\n                                        return item\n                                    }\n                                })\n                                'method' in message && (console[message.method] as Function).apply(console, parsedPayload)\n                            }\n                            break\n                    }\n                }\n            })\n    },\n    getIframe: () => document.getElementById('Straddle-widget-iframe') as HTMLIFrameElement,\n    show: () => {\n        straddleBridge.verbose && console.log('straddleBridge.show method called.')\n        const iframe = straddleBridge.getIframe()\n        straddleBridge.verbose && iframe && console.log('iframe found, setting display to block.')\n        iframe.style.display = 'block'\n    },\n    hide: () => {\n        straddleBridge.verbose && console.log('straddleBridge.hide method called.')\n        const iframe = straddleBridge.getIframe()\n        straddleBridge.verbose && iframe && console.log('iframe found, setting display to none.')\n        iframe.style.display = 'none'\n    },\n    remove: () => {\n        straddleBridge.verbose && console.log('straddleBridge.remove method called.')\n        const iframe = straddleBridge.getIframe()\n        iframe.remove()\n        straddleBridge.mounted = false\n    },\n    send: function send(message: TMessage) {\n        const iframe = document.getElementById('Straddle-widget-iframe') as HTMLIFrameElement\n        console.log('sending message:', message)\n        iframe?.contentWindow?.postMessage(message, straddleBridge.origin)\n    },\n}\ntypeof window !== 'undefined' && ((window as any).straddleBridge = straddleBridge)\n\nObject.defineProperty(straddleBridge, 'debug', {\n    value: {\n        enable: () => straddleBridge.send({ type: EBridgeMessageType.DEBUG, enable: true }),\n        disable: () => straddleBridge.send({ type: EBridgeMessageType.DEBUG, enable: false }),\n    },\n    enumerable: false,\n    writable: false,\n    configurable: false,\n})\n"],"names":["EBridgeMessageType","IFRAME_ID","straddleBridge","getUrl","origin","encodeURIComponent","window","location","replace","mounted","verbose","init","params","appUrl","token","onSuccess","onSuccessCTAClicked","onClose","onLoadError","onManualEntry","onRetry","targetRef","style","className","console","log","iframe","document","createElement","setAttribute","addEventListener","errorEvent","error","id","iframe_style","position","width","height","top","left","zIndex","Object","assign","split","forEach","classList","add","getElementsByTagName","appendChild","event","data","type","message","MOUNTED","send","INITIALIZE","ON_CLOSE","_a","querySelector","remove","ON_SUCCESS_CTA_CLICKED","removeChild","ON_MANUAL_ENTRY","ON_RETRY","ON_PAYKEY","paykeyResponse","CONSOLE","parsedPayload","payload","map","item","JSON","parse","method","apply","getIframe","getElementById","show","display","hide","contentWindow","postMessage","defineProperty","value","enable","DEBUG","disable","enumerable","writable","configurable"],"mappings":"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"}
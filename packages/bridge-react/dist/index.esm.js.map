{"version":3,"file":"index.esm.js","sources":["../src/StraddleBridge.tsx"],"sourcesContent":["import { EBridgeMessageType, TOnLoadErrorParams, TOnSuccessParams, TMessage, TMode } from '@straddleio/bridge-core'\nimport { CSSProperties, forwardRef, useEffect, useRef, useState } from 'react'\nexport type { TMode } from '@straddleio/bridge-core'\n\nconst IFRAME_ID = 'Straddle-widget-iframe'\nconst BRIDGE_CLIENT_LOG_LABEL_STYLE = 'color: #14b8a6; padding: 0px; border-radius: 24px; font-weight: 600;'\nconst BRIDGE_SERVER_LOG_LABEL_STYLE = 'color: #a855f7; padding: 0px; border-radius: 24px; font-weight: 600;'\n\nconst consoleDictionary: any = {\n    log: { conditionFn: (verbose: boolean) => verbose },\n    error: { conditionFn: (verbose: boolean) => true },\n    warn: { conditionFn: (verbose: boolean) => true },\n    info: { conditionFn: (verbose: boolean) => verbose },\n    debug: { conditionFn: (verbose: boolean) => verbose },\n    table: { conditionFn: (verbose: boolean) => verbose },\n}\nconst log = (...args: any[]) => console.log('%c●%c', BRIDGE_CLIENT_LOG_LABEL_STYLE, '', ...args)\nconst warn = (...args: any[]) => console.warn('%c●%c', BRIDGE_CLIENT_LOG_LABEL_STYLE, '', ...args)\nconst error = (...args: any[]) => console.error('%c●%c', BRIDGE_CLIENT_LOG_LABEL_STYLE, '', ...args)\n\nconst appUrlDictionary: Record<TMode, string> = {\n    production: 'https://bridge.straddle.io',\n    sandbox: 'https://bridge-sandbox.straddle.io',\n}\nconst getAppURLFromMode = (mode?: TMode) => appUrlDictionary[mode ?? 'production']\n\nexport const useStraddleBridge = ({\n    mode,\n    appUrl,\n    allowManualEntry,\n    verbose,\n}: {\n    mode?: TMode\n    appUrl?: string\n    allowManualEntry: boolean\n    verbose?: boolean\n}) => {\n    appUrl = appUrl ?? getAppURLFromMode(mode)\n    appUrl = appUrl.endsWith('/') ? appUrl.slice(0, -1) : appUrl\n    const [bridgeAppMounted, setBridgeAppMounted] = useState(false)\n    const [parentOrigin, protocol] = getParentOrigin()\n    // const url = `${appUrl}/${parentOrigin}/?parentOriginProtocol=${protocol}&allowManualEntry=${allowManualEntry}`\n    const url = `${appUrl}/?parentOriginURL=${parentOrigin}&parentOriginProtocol=${protocol}&allowManualEntry=${allowManualEntry}`\n    const send = (message: TMessage) => {\n        const iframe = document.getElementById(IFRAME_ID) as HTMLIFrameElement\n        if (iframe) {\n            verbose && log('Sending message to iframe with target:', appUrl, ', message:', message)\n            iframe.contentWindow?.postMessage(message, appUrl)\n        } else {\n            verbose && console.log('No iframe found, message not sent:', message)\n        }\n    }\n    return { send, bridgeAppMounted, setBridgeAppMounted, url, appUrl }\n}\n\nconst getParentOrigin = () => [\n    typeof window !== 'undefined' && encodeURIComponent(window.location.origin.replace('https://', '').replace('http://', '')),\n    typeof window !== 'undefined' && window.location.protocol.replace(':', ''),\n]\n\ntype TypeStraddleBridgeProps = {\n    mode?: TMode\n    appUrl?: string\n    open?: boolean\n    token: string\n    onSuccess: (payload: TOnSuccessParams) => void\n    onSuccessCTAClicked?: () => void\n    onClose?: () => void\n    onLoadError?: (err: TOnLoadErrorParams) => void\n    allowManualEntry?: boolean\n    onManualEntry?: () => void\n    onRetry?: () => void\n    className?: string\n    style?: CSSProperties\n}\n\nexport const StraddleBridge = forwardRef<HTMLElement, TypeStraddleBridgeProps & { verbose?: boolean }>((props, ref) => {\n    const {\n        mode,\n        open = true,\n        token,\n        onSuccess,\n        onSuccessCTAClicked,\n        onClose,\n        onLoadError,\n        allowManualEntry = true,\n        onManualEntry,\n        onRetry,\n        className,\n        style,\n        verbose,\n    } = props\n    const { send, setBridgeAppMounted, url, appUrl } = useStraddleBridge({ mode, appUrl: props.appUrl, allowManualEntry, verbose })\n    const iframeMounted = useRef(false)\n    useEffect(() => {\n        let errorHandler: (errorEvent: ErrorEvent) => void\n        const messageHandler = function (event: MessageEvent<TMessage>) {\n            // Make sure the message is from the expected origin\n            if (event.origin === appUrl) {\n                verbose && event.data.type !== EBridgeMessageType.CONSOLE && log('Message received from Bridge app:', event.data.type, event)\n                const message = event.data\n                switch (message?.type) {\n                    case EBridgeMessageType.PING:\n                        break\n                    case EBridgeMessageType.MOUNTED:\n                        setBridgeAppMounted(true)\n                        send({ type: EBridgeMessageType.INITIALIZE, token })\n                        break\n                    case EBridgeMessageType.ON_CLOSE:\n                        onClose?.()\n                        setBridgeAppMounted(false)\n                        document.querySelector(`#${IFRAME_ID}`)?.remove()\n                        break\n                    case EBridgeMessageType.ON_SUCCESS_CTA_CLICKED:\n                        onSuccessCTAClicked?.()\n                        document.querySelector(`#${IFRAME_ID}`)?.remove()\n                        break\n                    case EBridgeMessageType.ON_PAYKEY:\n                        onSuccess?.(message.paykeyResponse)\n                        break\n                    case EBridgeMessageType.ON_MANUAL_ENTRY:\n                        onManualEntry?.()\n                        break\n                    case EBridgeMessageType.ON_RETRY:\n                        onRetry?.()\n                        break\n                    case EBridgeMessageType.ERROR:\n                        onLoadError?.({ error_code: 'init_error', ...message.payload, origin: event.origin })\n                        break\n                    case EBridgeMessageType.CONSOLE:\n                        {\n                            const parsedPayload: any = message.payload.map((item: any) => {\n                                try {\n                                    return JSON.parse(item)\n                                } catch {\n                                    return item\n                                }\n                            })\n                            'method' in message &&\n                                consoleDictionary[message.method]?.conditionFn(verbose) &&\n                                (console[message.method] as Function).apply(console, ['%c●%c', BRIDGE_SERVER_LOG_LABEL_STYLE, '', ...parsedPayload])\n                        }\n                        break\n                }\n            } else {\n                // verbose && log('Message received from unknown origin:', event.origin, event.data)\n            }\n        }\n        window.addEventListener('message', messageHandler)\n        if (open && !iframeMounted.current) {\n            let iframe: HTMLIFrameElement | null = document.querySelector('#' + IFRAME_ID)\n            if (!iframe) {\n                iframe = document.createElement('iframe')\n                iframe.setAttribute('src', url)\n            }\n            errorHandler = (errorEvent: ErrorEvent) => {\n                error('Error loading Straddle Widget')\n                onLoadError?.({ error_code: 'iframe_error', error: errorEvent, message: 'Error loading Straddle Widget' })\n            }\n            if (iframe) {\n                iframe.addEventListener('error', errorHandler)\n            }\n            iframe.id = IFRAME_ID\n            let iframe_style = style\n            if (!style) {\n                iframe_style = { position: 'fixed', width: '100%', height: '100%', top: '0%', left: '0', zIndex: '2147483647' }\n            }\n            iframe_style && Object.assign(iframe.style, iframe_style)\n\n            if (className) {\n                className.split(' ').forEach((className) => {\n                    iframe.classList.add(className)\n                })\n            }\n            if (ref && 'current' in ref && ref.current && ref.current instanceof Node) {\n                ;(ref.current as HTMLElement).appendChild(iframe)\n            } else {\n                if (ref && 'current' in ref && (!ref.current || !(ref.current instanceof Node))) {\n                    warn('ref passed to StraddleBridge is not a valid ref, reverting to appening to body. Ref passed:', ref.current)\n                }\n                document.getElementsByTagName('body')[0].appendChild(iframe)\n                iframeMounted.current = true\n            }\n        } else if (!open) {\n            document.querySelector(`#${IFRAME_ID}`)?.remove()\n            iframeMounted.current = false\n            setBridgeAppMounted(false)\n        }\n        return () => {\n            const iframe: HTMLIFrameElement | null = document.querySelector('#' + IFRAME_ID)\n            errorHandler && iframe && iframe.removeEventListener('error', errorHandler)\n            messageHandler && window.removeEventListener('message', messageHandler)\n        }\n    }, [open])\n    useEffect(() => {\n        typeof window !== 'undefined' &&\n            ((window as any).straddleDebug = {\n                enable: () => send({ type: EBridgeMessageType.DEBUG, enable: true }),\n                disable: () => send({ type: EBridgeMessageType.DEBUG, enable: false }),\n            })\n    }, [])\n    return null\n})\n\nStraddleBridge.displayName = 'StraddleBridge'\n"],"names":["IFRAME_ID","BRIDGE_CLIENT_LOG_LABEL_STYLE","consoleDictionary","log","conditionFn","verbose","error","warn","info","debug","table","args","console","appUrlDictionary","production","sandbox","useStraddleBridge","mode","appUrl","allowManualEntry","getAppURLFromMode","endsWith","slice","bridgeAppMounted","setBridgeAppMounted","useState","parentOrigin","protocol","getParentOrigin","send","message","iframe","document","getElementById","_a","contentWindow","postMessage","url","window","encodeURIComponent","location","origin","replace","StraddleBridge","forwardRef","props","ref","open","token","onSuccess","onSuccessCTAClicked","onClose","onLoadError","onManualEntry","onRetry","className","style","iframeMounted","useRef","useEffect","errorHandler","messageHandler","event","data","type","EBridgeMessageType","CONSOLE","PING","MOUNTED","INITIALIZE","ON_CLOSE","querySelector","remove","ON_SUCCESS_CTA_CLICKED","_b","ON_PAYKEY","paykeyResponse","ON_MANUAL_ENTRY","ON_RETRY","ERROR","Object","assign","error_code","payload","parsedPayload","map","item","JSON","parse","_c","method","apply","addEventListener","current","createElement","setAttribute","errorEvent","id","iframe_style","position","width","height","top","left","zIndex","split","forEach","classList","add","Node","appendChild","getElementsByTagName","removeEventListener","straddleDebug","enable","DEBUG","disable","displayName"],"mappings":"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"}